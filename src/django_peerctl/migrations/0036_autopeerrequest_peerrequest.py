# Generated by Django 3.2.17 on 2023-06-05 08:25

import django.db.models.deletion
import django.db.models.manager
import django_handleref.models
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("django_fullctl", "0031_auto_20230310_2152"),
        ("django_peerctl", "0035_adjust_last_updown_type"),
    ]

    operations = [
        migrations.CreateModel(
            name="AutopeerRequest",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("django_fullctl.task",),
            managers=[
                ("handleref", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="PeerRequest",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "peer_asn",
                    models.PositiveIntegerField(help_text="Peer request to this ASN"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("pending", "Pending"), ("completed", "Completed")],
                        default="pending",
                        max_length=32,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("email", "Email"), ("autopeer", "Autopeer")],
                        max_length=32,
                    ),
                ),
                (
                    "net",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="peer_requests",
                        to="django_peerctl.network",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="peer_requests",
                        to="django_fullctl.task",
                    ),
                ),
            ],
            options={
                "verbose_name": "Peer Request",
                "verbose_name_plural": "Peer Requests",
                "db_table": "peerctl_peerrequest",
            },
            managers=[
                ("handleref", django.db.models.manager.Manager()),
            ],
        ),
    ]
